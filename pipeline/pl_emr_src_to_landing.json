{
	"name": "pl_emr_src_to_landing",
	"properties": {
		"activities": [
			{
				"name": "lkp_emr_configs",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_strorageaccnt_flatfile",
						"type": "DatasetReference",
						"parameters": {
							"container": "configs",
							"file_path": "emr",
							"file_name": "load_config.csv"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach entry in emr config file",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "lkp_emr_configs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lkp_emr_configs').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 10,
					"activities": [
						{
							"name": "check if file already exists in bronze",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_storageaccnt_parquetfile",
									"type": "DatasetReference",
									"parameters": {
										"container": "bronze",
										"file_path": {
											"value": "@item().targetpath",
											"type": "Expression"
										},
										"file_name": {
											"value": "@split(item().tablename,'.')[1]",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							}
						},
						{
							"name": "if file exists then archive",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "check if file already exists in bronze",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('check if file already exists in bronze').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "archive file",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ParquetSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "ParquetReadSettings"
												}
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_storageaccnt_parquetfile",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"file_path": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename, '.')[1]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_storageaccnt_parquetfile",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"file_path": {
														"value": "@concat(item().targetpath,'/archive/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'),'/')",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "check if full load or incremental",
							"type": "IfCondition",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "if file exists then archive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().loadtype,'Full')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Lookup delta log table",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_loadedtime from audit.load_logs where tablename=''',item().tablename,''' and data_source=''',item().datasource,'''')",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "ls_adb_deltalake",
												"type": "DatasetReference",
												"parameters": {
													"db_name": "audit",
													"table_name": "load_logs"
												}
											},
											"firstRowOnly": false
										}
									},
									{
										"name": "Copy incremental data",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Lookup delta log table",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat('select *,''',item().datasource,''' as datasource from ',item().tablename,' where ''',item().watermark,''' >= ''',activity('Lookup delta log table').output.value[0].last_loadedtime,'''')",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_azsql",
												"type": "DatasetReference",
												"parameters": {
													"db_name": {
														"value": "@item().database",
														"type": "Expression"
													},
													"schema_name": {
														"value": "@split(item().tablename,'.' )[0]",
														"type": "Expression"
													},
													"table_name": {
														"value": "@split(item().tablename,'.' )[1]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_storageaccnt_parquetfile",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"file_path": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "update delta log table",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Copy incremental data",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',item().datasource,''',''',item().tablename,''',''',activity('Copy incremental data').output.rowscopied,''', ''',item().watermark,''',''',utcNow(),''')')",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "ls_adb_deltalake",
												"type": "DatasetReference",
												"parameters": {
													"db_name": "audit",
													"table_name": "load_logs"
												}
											},
											"firstRowOnly": false
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data from azsql to bronze",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat('select *,''',item().datasource,''' as datasource from',' ',item().tablename)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_azsql",
												"type": "DatasetReference",
												"parameters": {
													"db_name": {
														"value": "@item().database",
														"type": "Expression"
													},
													"schema_name": {
														"value": "@split(item().tablename,'.')[0]",
														"type": "Expression"
													},
													"table_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_storageaccnt_parquetfile",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"file_path": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "update log table",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Copy data from azsql to bronze",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',item().datasource,''',''',item().tablename,''',''',activity('Copy data from azsql to bronze').output.rowscopied,''', ''',item().watermark,''',''',utcNow(),''')')",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "ls_adb_deltalake",
												"type": "DatasetReference",
												"parameters": {
													"db_name": "audit",
													"table_name": "load_logs"
												}
											},
											"firstRowOnly": false
										}
									}
								]
							}
						},
						{
							"name": "If is_active",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "check if full load or incremental",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().is_active,1 )",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "check if full load or incremental_copy1",
										"type": "IfCondition",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"expression": {
												"value": "@equals(item().loadtype,'Full')",
												"type": "Expression"
											},
											"ifFalseActivities": [
												{
													"name": "Lookup delta log table_copy1",
													"type": "Lookup",
													"dependsOn": [],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "AzureDatabricksDeltaLakeSource",
															"query": {
																"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_loadedtime from audit.load_logs where tablename=''',item().tablename,''' and data_source=''',item().datasource,'''')",
																"type": "Expression"
															}
														},
														"dataset": {
															"referenceName": "ls_adb_deltalake",
															"type": "DatasetReference",
															"parameters": {
																"db_name": "audit",
																"table_name": "load_logs"
															}
														},
														"firstRowOnly": false
													}
												},
												{
													"name": "Copy incremental data_copy1",
													"type": "Copy",
													"dependsOn": [
														{
															"activity": "Lookup delta log table_copy1",
															"dependencyConditions": [
																"Succeeded"
															]
														}
													],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "AzureSqlSource",
															"sqlReaderQuery": {
																"value": "@concat('select *,''',item().datasource,''' as datasource from ',item().tablename,' where ''',item().watermark,''' >= ''',activity('Lookup delta log table').output.value[0].last_loadedtime,'''')",
																"type": "Expression"
															},
															"queryTimeout": "02:00:00",
															"partitionOption": "None"
														},
														"sink": {
															"type": "ParquetSink",
															"storeSettings": {
																"type": "AzureBlobFSWriteSettings"
															},
															"formatSettings": {
																"type": "ParquetWriteSettings"
															}
														},
														"enableStaging": false,
														"translator": {
															"type": "TabularTranslator",
															"typeConversion": true,
															"typeConversionSettings": {
																"allowDataTruncation": true,
																"treatBooleanAsNumber": false
															}
														}
													},
													"inputs": [
														{
															"referenceName": "ds_azsql",
															"type": "DatasetReference",
															"parameters": {
																"db_name": {
																	"value": "@item().database",
																	"type": "Expression"
																},
																"schema_name": {
																	"value": "@split(item().tablename,'.' )[0]",
																	"type": "Expression"
																},
																"table_name": {
																	"value": "@split(item().tablename,'.' )[1]",
																	"type": "Expression"
																}
															}
														}
													],
													"outputs": [
														{
															"referenceName": "ds_storageaccnt_parquetfile",
															"type": "DatasetReference",
															"parameters": {
																"container": "bronze",
																"file_path": {
																	"value": "@item().targetpath",
																	"type": "Expression"
																},
																"file_name": {
																	"value": "@split(item().tablename,'.')[1]",
																	"type": "Expression"
																}
															}
														}
													]
												},
												{
													"name": "update delta log table_copy1",
													"type": "Lookup",
													"dependsOn": [
														{
															"activity": "Copy incremental data_copy1",
															"dependencyConditions": [
																"Succeeded"
															]
														}
													],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "AzureDatabricksDeltaLakeSource",
															"query": {
																"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',item().datasource,''',''',item().tablename,''',''',activity('Copy incremental data').output.rowscopied,''', ''',item().watermark,''',''',utcNow(),''')')",
																"type": "Expression"
															}
														},
														"dataset": {
															"referenceName": "ls_adb_deltalake",
															"type": "DatasetReference",
															"parameters": {
																"db_name": "audit",
																"table_name": "load_logs"
															}
														},
														"firstRowOnly": false
													}
												}
											],
											"ifTrueActivities": [
												{
													"name": "Copy data from azsql to bronze_copy1",
													"type": "Copy",
													"dependsOn": [],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "AzureSqlSource",
															"sqlReaderQuery": {
																"value": "@concat('select *,''',item().datasource,''' as datasource from',' ',item().tablename)",
																"type": "Expression"
															},
															"queryTimeout": "02:00:00",
															"partitionOption": "None"
														},
														"sink": {
															"type": "ParquetSink",
															"storeSettings": {
																"type": "AzureBlobFSWriteSettings"
															},
															"formatSettings": {
																"type": "ParquetWriteSettings"
															}
														},
														"enableStaging": false,
														"translator": {
															"type": "TabularTranslator",
															"typeConversion": true,
															"typeConversionSettings": {
																"allowDataTruncation": true,
																"treatBooleanAsNumber": false
															}
														}
													},
													"inputs": [
														{
															"referenceName": "ds_azsql",
															"type": "DatasetReference",
															"parameters": {
																"db_name": {
																	"value": "@item().database",
																	"type": "Expression"
																},
																"schema_name": {
																	"value": "@split(item().tablename,'.')[0]",
																	"type": "Expression"
																},
																"table_name": {
																	"value": "@split(item().tablename,'.')[1]",
																	"type": "Expression"
																}
															}
														}
													],
													"outputs": [
														{
															"referenceName": "ds_storageaccnt_parquetfile",
															"type": "DatasetReference",
															"parameters": {
																"container": "bronze",
																"file_path": {
																	"value": "@item().targetpath",
																	"type": "Expression"
																},
																"file_name": {
																	"value": "@split(item().tablename,'.')[1]",
																	"type": "Expression"
																}
															}
														}
													]
												},
												{
													"name": "update log table_copy1",
													"type": "Lookup",
													"dependsOn": [
														{
															"activity": "Copy data from azsql to bronze_copy1",
															"dependencyConditions": [
																"Succeeded"
															]
														}
													],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "AzureDatabricksDeltaLakeSource",
															"query": {
																"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',item().datasource,''',''',item().tablename,''',''',activity('Copy data from azsql to bronze').output.rowscopied,''', ''',item().watermark,''',''',utcNow(),''')')",
																"type": "Expression"
															}
														},
														"dataset": {
															"referenceName": "ls_adb_deltalake",
															"type": "DatasetReference",
															"parameters": {
																"db_name": "audit",
																"table_name": "load_logs"
															}
														},
														"firstRowOnly": false
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}